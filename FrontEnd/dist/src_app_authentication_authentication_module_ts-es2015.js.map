{"version":3,"sources":["./src/app/authentication/authentication-routing.module.ts","./src/app/authentication/authentication.module.ts","./src/app/authentication/forgot-password/forgot-password.component.ts","./src/app/authentication/forgot-password/forgot-password.component.html","./src/app/authentication/reset-password/reset-password.component.html","./src/app/authentication/reset-password/reset-password.component.ts","./src/app/authentication/signin/signin.component.ts","./src/app/authentication/signin/signin.component.html","./src/app/authentication/signup/next-signup/next-signup.component.html","./src/app/authentication/signup/next-signup/next-signup.component.ts","./src/app/authentication/signup/signup.component.ts","./src/app/authentication/signup/signup.component.html","./src/app/core/service/toast-service/toas-service.service.ts"],"names":[],"mappings":"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","file":"src_app_authentication_authentication_module_ts-es2015.js","sourcesContent":["import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { SigninComponent } from \"./signin/signin.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\nimport { NextSignupComponent } from \"./signup/next-signup/next-signup.component\";\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"signin\",\n    pathMatch: \"full\",\n  },\n  {\n    path: \"signin\",\n    component: SigninComponent,\n  },\n  {\n    path: \"signup\",\n    component: SignupComponent,\n  },\n  {\n    path: \"next-signup\",\n    component: NextSignupComponent\n  },\n  {\n    path: \"forgot-password\",\n    component: ForgotPasswordComponent\n  },\n  {\n    path: \"reset-password\",\n    component: ResetPasswordComponent\n  }\n];\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AuthenticationRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\nimport { AuthenticationRoutingModule } from \"./authentication-routing.module\";\nimport { SigninComponent } from \"./signin/signin.component\";\nimport { SignupComponent } from \"./signup/signup.component\";\nimport { ForgotPasswordComponent } from \"./forgot-password/forgot-password.component\";\nimport { ReactiveFormsModule } from \"@angular/forms\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatSelectModule } from \"@angular/material/select\";\nimport { NextSignupComponent } from './signup/next-signup/next-signup.component';\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\n\n\n@NgModule({\n  declarations: [\n    SigninComponent,\n    SignupComponent,\n    ForgotPasswordComponent,\n    NextSignupComponent,\n    ResetPasswordComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AuthenticationRoutingModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatIconModule,\n    MatButtonModule,\n    MatSelectModule,\n  ],\n})\nexport class AuthenticationModule {}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\nimport { ToasServiceService } from \"src/app/core/service/toast-service/toas-service.service\";\n@Component({\n  selector: \"app-forgot-password\",\n  templateUrl: \"./forgot-password.component.html\",\n  styleUrls: [\"./forgot-password.component.scss\"],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  authForm: FormGroup;\n  public loading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private restApi: RestApiService,\n    private toastr: ToasServiceService\n  ) {}\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      username: [\n        \"\",\n        [ Validators.required, Validators.minLength(3)],\n      ],\n\n      password: [\n        \"\",\n        [ Validators.required, Validators.minLength(6)],\n      ]\n     \n    });\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  onSubmit() {\n    // stop here if form is invalid\n    if (this.authForm.invalid) {\n      return;\n    } else {\n      this.loading = true;\n     this.restApi.changeUserPassword(this.authForm.controls.username.value, this.authForm.controls.password.value).subscribe(\n       {\n         next: result =>{\n           this.toastr.showSuccessMessage(result);\n            this.loading = false;\n           this.router.navigate([\"/authentication/signin\"]);\n         },\n         error: error=>{\n          this.loading = false;\n           this.toastr.showErrorMessage(\"Ce nom d'utilisateur n'existe pas\");\n         }\n       }\n     );\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\n      </div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <div class=\"logo\">\n            <img  src=\"assets/images/ges_cab.png\" alt=\"\" width=\"250\" height=\"250\" >\n          </div>\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <h2 class=\"welcome-msg card-title\"> Réinitiliser votre mot de passe </h2>\n     \n              <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"row\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                    <span class=\"error-subheader2 p-t-20 p-b-15\">\n                      Entrer vos informations.\n                    </span>\n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                      <mat-label>Nom d'utilisateur</mat-label>\n                      <input matInput formControlName=\"username\" required>\n                      <mat-icon matSuffix>face</mat-icon>\n                      <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\n                       Veuillez renseigner votre nom d'utilisateur\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n\n                <div class=\"row\">\n                  <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                   \n                    <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                      <mat-label>Nouveau mot de passe</mat-label>\n                      <input matInput formControlName=\"password\" required>\n                      <mat-icon matSuffix>password</mat-icon>\n                      <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\n                       Veuillez renseigner votre nouveau mot de passe\n                      </mat-error>\n                    </mat-form-field>\n                  </div>\n                </div>\n                <div class=\"container-auth-form-btn mt-2 mb-0\">\n                  <button mat-flat-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\" color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid \" type=\"submit\">\n                    Envoyer\n                  </button>\n                </div>\n                <div class=\"w-full p-t-25 text-center\">\n                  <div>\n                    <a routerLink=\"/authentication/signin\" class=\"txt1\">\n                      Se connecter?\n                    </a>\n                  </div>\n                </div>\n              </form>\n\n            </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n","<div class=\"auth-container\">\n    <div class=\"row auth-main\">\n      <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\n        </div>\n      </div>\n      <div class=\"col-sm-6 auth-form-section\">\n        <div class=\"form-section\">\n          <div class=\"auth-wrapper\">\n            <div class=\"logo\">\n              <img  src=\"assets/images/ges_cab.png\" alt=\"\" width=\"250\" height=\"250\" >\n            </div>\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h2 class=\"welcome-msg card-title\">Mot de passe oublié ?</h2>\n       \n                <form #_form=\"ngForm\" (ngSubmit)=\"onSubmit(_form)\">\n                  <div class=\"row\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                      <span class=\"error-subheader2 p-t-20 p-b-15 text-center\">\n                        Entrez votre email !\n                      </span>\n                      <div *ngIf=\"errorMsg\" class=\"col-red mb-2\">{{errorMsg}}</div>\n                      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Votre email</mat-label>\n                        <input matInput type=\"email\" ngModel name=\"email\" required email>\n                        <mat-icon matSuffix>email</mat-icon>\n                        <mat-error *ngIf=\"!_form.valid\">\n                         Veuillez renseigner le bon email !\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"container-auth-form-btn mt-2 mb-0\">\n                    <button mat-flat-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\" color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!_form.valid \" type=\"submit\">\n                      Envoyer\n                    </button>\n                  </div>\n                  <div class=\"w-full p-t-25 text-center\">\n                    <div>\n                      <a routerLink=\"/authentication/signin\" class=\"txt1\">\n                        Se connecter?\n                      </a>\n                    </div>\n                  </div>\n                </form>\n  \n              </div>\n  \n            </div>\n          </div>\n        </div>\n      </div>\n  \n    </div>\n  </div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr';\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n  public loading = false;\n  public errorMsg: any;\n\n  constructor(private restApi: RestApiService, private toastr: ToastrService, private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit(_form: NgForm)\n  {\n    this.loading = true;\n    this.restApi.sendEmailToUser(_form.value.email).subscribe(\n      {\n        next: result =>{\n          if(!result)\n          {\n            this.errorMsg = \"Votre email est incorrecte !\";\n          }\n          else{\n            this.toastr.success(\"Veuillez vérifier votre email !\", null, {timeOut: 4000});\n           this.router.navigate([\"/authentication/signin\"]);\n          }\n          this.loading = false;\n        },\n        error: error =>{\n          console.log(error);\n          this.loading = false;\n        }\n      }\n    )\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { AuthService } from \"src/app/core/service/auth.service\";\nimport { Role } from \"src/app/core/models/role\";\nimport { UnsubscribeOnDestroyAdapter } from \"src/app/shared/UnsubscribeOnDestroyAdapter\";\n\n@Component({\n  selector: \"app-signin\",\n  templateUrl: \"./signin.component.html\",\n  styleUrls: [\"./signin.component.scss\"],\n})\nexport class SigninComponent\n  extends UnsubscribeOnDestroyAdapter\n  implements OnInit\n{\n  authForm: FormGroup;\n  submitted = false;\n  loading = false;\n  error = \"\";\n  hide = true;\n  constructor(\n    private formBuilder: FormBuilder,\n    private router: Router,\n    private authService: AuthService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      username: [\"\", Validators.required],\n      password: [\"\", Validators.required],\n    });\n  }\n\n  get f() {\n    return this.authForm.controls;\n  }\n\n  onSubmit()\n  {\n    this.loading = true;\n    if(this.authForm.invalid)\n    {\n      this.error = \"Nom d'utilisateur ou mot de passe non valide !\";\n      return;\n    }\n    else\n    {\n      this.authService.login(this.f.username.value, this.f.password.value).subscribe(\n        {\n          next: (token) => {\n            setTimeout(() => {\n              let userRole = localStorage.getItem(\"userRole\");\n              if(userRole === Role.SUPERADMIN || userRole === Role.ADMIN)\n              {\n                this.router.navigate([\"/admin/dashboard/main\"]);\n              }\n              else if(userRole === Role.MEDECIN)\n              {\n                this.router.navigate([\"/doctor/dashboard\"]);\n              }\n              else if(userRole === Role.PATIENT)\n              {\n                this.router.navigate([\"/patient/dashboard\"]);\n              }\n              else\n              {\n                this.router.navigate([\"/authentication/signin\"]);\n              }\n              \n              this.loading = false;\n            }, 1000);\n          },\n          error: () => {\n            this.error = \"Nom d'utilisateur ou mot de passe non valide !\";\n            this.loading = false;\n          }\n        }\n      );\n    }\n  }\n}\n","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <link rel=\"stylesheet\"  href=\"signin.component.scss\">\n  <title>GesCab</title>\n</head>\n<body>\n  <div class=\"auth-container\">\n    <div class=\"row auth-main\">\n      <div class=\"col-sm-6 px-0 d-none d-sm-block\">\n        <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\n        </div>\n      </div>\n      <div class=\"col-sm-6 auth-form-section\">\n        <div class=\"form-section\">\n          <div class=\"auth-wrapper\">\n            <div class=\"logo\">\n              <img  src=\"assets/images/ges_cab.png\" alt=\"\" width=\"250\" height=\"250\" >\n            </div>\n\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n                  <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-3\">{{error}}</div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Nom d'utilisateur</mat-label>\n                        <input matInput formControlName=\"username\" minlength=\"3\" maxlength=\"20\">\n                        <mat-icon matSuffix>face</mat-icon>\n                        <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\n                          Champ obligatoire\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                      <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                        <mat-label>Mot de passe</mat-label>\n                        <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" minlength=\"6\" maxlength=\"20\">\n                        <a class=\"show-pwd-icon\" href=\"#\"  matSuffix (click)=\"hide = !hide\"\n                          [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        </a>\n                        <mat-error *ngIf=\"authForm.get('password').hasError('required')\">\n                          Mot de passe obligatoire\n                        </mat-error>\n                      </mat-form-field>\n                    </div>\n                  </div>\n                  <div class=\"mb-2 textRight\">\n                    <a routerLink=\"/authentication/reset-password\">Mot de passe oublié?</a>\n                  </div>\n                  <div class=\"container-auth-form-btn\">\n                    <div style=\"text-align:center\">\n                      <button mat-raised-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\"\n                        class=\"auth-form-btn\" color=\"primary\" [disabled]=\"!authForm.valid \" type=\"submit\" >Connexion</button>\n                    </div>\n                    <div class=\"text-center mt-2 mb-1\">\n                      <span>OU</span>\n                    </div>\n                    <div style=\"text-align:center\" class=\"mt-1\">\n                      <button mat-raised-button class=\"auth-form-btn sign-up-button\" type=\"submit\" routerLink=\"/authentication/signup\">S'inscrire</button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</body>\n</html>","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\" style=\"background-color: white;\">\n      <div class=\"logo\">\n        <img  src=\"assets/images/ges_cab.png\" alt=\"\" width=\"150\">\n      </div>\n      <div class=\"left-img\" style=\"background-image: url(assets/images/pages/Gb.png);\">\n      </div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\" style=\"margin-bottom: -12%;\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <h2 class=\"welcome-msg\"> S'inscrire </h2>\n          <p class=\"auth-signup-text text-muted\">Veuillez fournir vos informations restantes</p>\n          <form class=\"validate-form\" #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\">\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-3\">{{error}}</div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Email</mat-label>\n                  <input matInput type=\"email\" name=\"email\" ngModel [email]=\"true\" required>\n                  <mat-icon matSuffix>mail</mat-icon>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Veuillez entrer le bon E-mail\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\n                <mat-form-field class=\"example-full-width mb-3\">\n                  <mat-label>Profile</mat-label>\n                  <mat-select name=\"profile\" ngModel required #profile=\"ngModel\">\n                    <mat-option value=\"PATIENT\">\n                      PATIENT\n                    </mat-option>\n                    <mat-option value=\"MEDECIN\">\n                      MEDECIN\n                    </mat-option>\n                  </mat-select>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Champ obligatoire, choissez un Profile\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"profile.value==='PATIENT'\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Profession</mat-label>\n                  <input matInput name=\"profession\" ngModel required>\n                  <mat-icon matSuffix>work</mat-icon>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Veuillez entrer votre profession\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"profile.value==='MEDECIN'\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Rive</mat-label>\n                  <mat-select (ngModelChange)=\"onChangeRiveValue($event)\" name=\"rive\" ngModel required>\n                    <mat-option *ngFor=\"let item of allRive\" value=\"{{item.idRive}}\">\n                      {{item.nomRive}}\n                    </mat-option>\n                  </mat-select>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Veuillez entrez votre rive\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"profile.value==='MEDECIN'\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Cabinet Médicale</mat-label>\n                  <mat-select (ngModelChange)=\"onChangeCabinetValue($event)\" name=\"cabinetMedicale\" ngModel required>\n                    <mat-option *ngFor=\"let item of allCabinetMedicales\" value=\"{{item.idCabinet}}\">\n                      {{item.nom}} | {{item.adresse}}\n                    </mat-option>\n                  </mat-select>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Veuillez selectionner un cabinet médicale\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\" *ngIf=\"profile.value==='MEDECIN'\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Spécialité</mat-label>\n                  <mat-select name=\"specialite\" ngModel required>\n                    <mat-option *ngFor=\"let item of allSpecialities\" value=\"{{item.idSpecialite}}\">\n                      {{item.nom}}\n                    </mat-option>\n                  </mat-select>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Veuillez entrer votre spécialité\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Mot de passe</mat-label>\n                  <input matInput name=\"password\" ngModel [type]=\"hide ? 'password' : 'text'\" minlength=\"6\" maxlength=\"20\" required>\n                  <mat-icon matSuffix (click)=\"hide = !hide\">\n                    {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Mot de passe obligatoire et au moins 6 caractères\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Confirmer le mot de passe</mat-label>\n                  <input matInput name=\"cpassword\" ngModel [type]=\"chide ? 'password' : 'text'\" minlength=\"6\" maxlength=\"20\" required>\n                  <mat-icon matSuffix (click)=\"chide = !chide\">\n                    {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  <mat-error *ngIf=\"!authForm.valid\">\n                    Mot de passe confirmer obligatoire et au moins 6 caractères\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"flex-sb-m w-full  p-b-20\">\n              <div>\n                <span>Vous avez déjà un compte? <a routerLink=\"/authentication/signin\">\n                    Se connecter\n                  </a></span>\n              </div>\n            </div>\n            <div class=\"container-auth-form-btn\">\n              <button mat-flat-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\" color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\n                S'inscrire\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RestApiService } from 'src/app/core/service/api-services/rest-api.service';\nimport { ToasServiceService } from 'src/app/core/service/toast-service/toas-service.service';\n\n@Component({\n  selector: 'app-next-signup',\n  templateUrl: './next-signup.component.html',\n  styleUrls: ['./next-signup.component.sass']\n})\nexport class NextSignupComponent implements OnInit {\n  hide = true;\n  chide = true;\n  error: any;\n  public userDataSendByRoute: any;\n  public userPostBody: any;\n  public allSpecialities: any;\n  public allCabinetMedicales: any;\n  public allRive: any;\n  public loading = false;\n\n  constructor(private activedRoute: ActivatedRoute, private restApi: RestApiService, private router: Router, private toastr: ToasServiceService) {\n    this.activedRoute.queryParams.subscribe(\n      data => {\n        this.userDataSendByRoute = data;\n      }\n    );\n\n    this.restApi.getAllRive().subscribe(\n      {\n        next: result =>{\n          this.allRive = result;\n        }\n      }\n    );\n  }\n\n  ngOnInit(): void {\n  }\n\n  onChangeRiveValue(idRive)\n  {\n    let postValue = {\"idRive\": idRive}\n    this.restApi.getCabinetByRive(postValue).subscribe(\n      {\n        next: result =>{\n          this.allCabinetMedicales = result;\n        }\n      }\n    );\n  }\n\n  onChangeCabinetValue(idCabinet)\n  {\n    let postValue = {\"idCabinet\": idCabinet}\n    this.restApi.getCabinetSpecialities(postValue).subscribe(\n      {\n        next: result =>{\n          this.allSpecialities = result;\n        }\n      }\n    );\n  }\n\n  onSubmit(authForm: NgForm)\n  {\n    this.loading = true;\n    this.restApi.getPersonEmail(authForm.value.email).subscribe(\n      {\n        next: result =>{\n          if(result)\n          {\n            this.loading = false;\n            this.error = \"Cet email existe déjà !\";\n            return;\n          }\n\n          if(authForm.value.password !== authForm.value.cpassword)\n          {\n            this.loading = false;\n            this.error = \"Votre mot de passe et le mot de passe confirmer doivent être identique !\";\n            return;\n          }\n          else\n          {\n            if(authForm.value.profile === \"MEDECIN\")\n            { \n              this.userPostBody = {\n                \"person_type\": \"MEDECIN\",\n                \"profile\": authForm.value.profile,\n                \"nom\": this.userDataSendByRoute.nom,\n                \"prenom\": this.userDataSendByRoute.prenom,\n                \"adresse\": this.userDataSendByRoute.adresse,\n                \"telephone\": this.userDataSendByRoute.telephone,\n                \"email\": authForm.value.email,\n                \"genre\": this.userDataSendByRoute.genre,\n                \"username\": this.userDataSendByRoute.username,\n                \"password\": authForm.value.password,\n                \"specialite\": {\n                  \"idSpecialite\": authForm.value.specialite\n                },\n                \"cabinetMedicale\": {\n                  \"idCabinet\": authForm.value.cabinetMedicale\n                },\n                \"imageProfile\": \"imageLinnnkkk\",\n                \"roles\": [\n                  {\"idRole\": 3}\n                ]\n              };\n              \n            }\n            else if(authForm.value.profile === \"PATIENT\")\n            {\n              this.userPostBody = {\n                \"person_type\": \"PATIENT\",\n                \"profile\": authForm.value.profile,\n                \"profession\": authForm.value.profession,\n                \"nom\": this.userDataSendByRoute.nom,\n                \"prenom\": this.userDataSendByRoute.prenom,\n                \"adresse\": this.userDataSendByRoute.adresse,\n                \"telephone\": this.userDataSendByRoute.telephone,\n                \"email\": authForm.value.email,\n                \"genre\": this.userDataSendByRoute.genre,\n                \"username\": this.userDataSendByRoute.username,\n                \"password\": authForm.value.password,\n                \"imageProfile\": \"imageLinnnkkk\",\n                \"roles\": [\n                  {\"idRole\": 4}\n                ]\n              };\n            }\n            else\n            {this.loading = false;\n              this.error = \"Profile inconnu !\";\n              return;\n            }\n            \n            this.restApi.addNewUser(this.userPostBody).subscribe(\n              {\n                next: result => {\n                  if(authForm.value.profile === \"MEDECIN\")\n                  {\n                    this.toastr.showSuccessMessage(\"Votre inscription a été prise en compte, veuillez attendre la confirmation par mail !\");\n                  }\n                  else{\n                    this.toastr.showSuccessMessage(\"Inscription éffectué avec succès !\");\n                  }\n                  \n                  this.loading = false;\n                  this.router.navigate(['/authentication/signin']);\n                },\n                error: error =>{\n                  this.loading = false;\n                  this.toastr.showErrorMessage(\"Problème d'inscription, réessayer plus tard !\");\n                }\n              }\n            );\n          }\n        }\n      }\n    );\n  }\n}\n","import { Component, OnInit } from \"@angular/core\";\nimport { Router, ActivatedRoute, NavigationExtras } from \"@angular/router\";\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\nimport { RestApiService } from \"src/app/core/service/api-services/rest-api.service\";\n@Component({\n  selector: \"app-signup\",\n  templateUrl: \"./signup.component.html\",\n  styleUrls: [\"./signup.component.scss\"],\n})\nexport class SignupComponent implements OnInit {\n  public error: any;\n  public authForm: FormGroup;\n  public returnUrl: string;\n  public hide = true;\n  public chide = true;\n  public loading = false;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private restApi: RestApiService\n  ) {}\n  ngOnInit() {\n    this.authForm = this.formBuilder.group({\n      username: [\"\", Validators.required],\n      nom: [\"\", Validators.required],\n      prenom: [\"\", Validators.required],\n      adresse: [\"\", Validators.required],\n      genre: [\"\", Validators.required],\n      telephone: [\"\", [Validators.required, Validators.minLength(8), Validators.maxLength(13), Validators.pattern(\"[0-9]*\")]]\n    });\n    \n    // get return url from route parameters or default to '/'\n    this.returnUrl = this.route.snapshot.queryParams[\"returnUrl\"] || \"/\";\n  }\n  get f() {\n    return this.authForm.controls;\n  }\n  onSubmit() {\n    // stop here if form is invalid\n    if (this.authForm.invalid) {\n      return;\n    }\n    else\n    {\n      this.loading = true;\n      this.restApi.getPersonUsername(this.f.username.value).subscribe(\n        {\n          next: result =>{\n            if(result)\n            {\n              this.loading = false;\n              this.error = \"Ce nom d'utilisateur existe déjà !\";\n              return;\n            }\n\n            this.restApi.getPersonTelephone(this.f.telephone.value).subscribe(\n              {\n                next: result =>{\n                  if(result)\n                  {\n                    this.loading = false;\n                    this.error = \"Ce numéro de téléphone existe déjà !\";\n                    return;\n                  }\n                  const navigationValue: NavigationExtras = {queryParams: {\n                    username: this.f.username.value,\n                    nom: this.f.nom.value,\n                    prenom: this.f.prenom.value,\n                    adresse: this.f.adresse.value,\n                    genre: this.f.genre.value,\n                    telephone: this.f.telephone.value,\n                  }}\n                  this.router.navigate(['/authentication/next-signup'], navigationValue);\n                  this.loading = false;\n                }\n              }\n            );\n          }\n        }\n      );\n    }\n  }\n}\n","<div class=\"auth-container\">\n  <div class=\"row auth-main\">\n    <div class=\"col-sm-6 px-0 d-none d-sm-block\" style=\"background-color: white;\">\n      <div class=\"logo\">\n        <img  src=\"assets/images/ges_cab.png\" alt=\"\" width=\"150\">\n      </div>\n      <div class=\"left-img img-fluid\" style=\"background-image: url(assets/images/pages/Gb.png);\"></div>\n    </div>\n    <div class=\"col-sm-6 auth-form-section\">\n      <div class=\"form-section\">\n        <div class=\"auth-wrapper\">\n          <h2 class=\"welcome-msg\"> S'inscrire </h2>\n          <p class=\"auth-signup-text text-muted\">Veuillez fournir vos informations</p>\n          <form class=\"validate-form\" [formGroup]=\"authForm\" (ngSubmit)=\"onSubmit()\">\n            <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-3\">{{error}}</div>\n            <div class=\"row\">\n              <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Nom d'utilisateur</mat-label>\n                  <input matInput formControlName=\"username\" minlength=\"3\" maxlength=\"20\" required>\n                  <mat-icon matSuffix>face</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('username').hasError('required')\">\n                    Champ obligatoire, donnez un bon username\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Nom</mat-label>\n                  <input matInput formControlName=\"nom\" minlength=\"3\" maxlength=\"50\" required>\n                  <mat-icon matSuffix>face</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('nom').hasError('required')\">\n                    Champ obligatoire, donnez un bon nom\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Prénom</mat-label>\n                  <input matInput formControlName=\"prenom\" minlength=\"3\" maxlength=\"50\" required>\n                  <mat-icon matSuffix>face</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('prenom').hasError('required')\">\n                    Champ obligatoire, donnez un bon prenom\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Adresse</mat-label>\n                  <input matInput formControlName=\"adresse\" minlength=\"4\" maxlength=\"50\" required>\n                  <mat-icon matSuffix>book</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('adresse').hasError('required')\">\n                    Champ obligatoire, donnez une bonne adresse\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\n                <mat-form-field class=\"example-full-width mb-3\">\n                  <mat-label>Genre</mat-label>\n                  <mat-select formControlName=\"genre\" required>\n                    <mat-option value=\"Homme\">\n                      Homme\n                    </mat-option>\n                    <mat-option value=\"Femme\">\n                      Femme\n                    </mat-option>\n                  </mat-select>\n                  <mat-error *ngIf=\"authForm.get('genre').hasError('required')\">\n                    Champ obligatoire, choissez un genre\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12\">\n                <mat-form-field class=\"example-full-width\" appearance=\"outline\">\n                  <mat-label>Téléphone</mat-label>\n                  <input matInput formControlName=\"telephone\" type=\"text\" required>\n                  <mat-icon matSuffix>phone</mat-icon>\n                  <mat-error *ngIf=\"authForm.get('telephone').hasError('required')\">\n                    Champ obligatoire, veuilez donner le bon numéro de téléphone\n                  </mat-error>\n                  <mat-error *ngIf=\"authForm.get('telephone').hasError('pattern')\">\n                    Veuillez entrer que des chiffres !\n                  </mat-error>\n                  <mat-error *ngIf=\"authForm.get('telephone').hasError('minlength')\">\n                    Votre numéro doit être au minimum de 8 chiffres !\n                  </mat-error>\n                  <mat-error *ngIf=\"authForm.get('telephone').hasError('maxlength')\">\n                    Votre numéro ne doit pas dépasser 13 chiffres !\n                  </mat-error>\n                </mat-form-field>\n              </div>\n            </div>\n            <div class=\"flex-sb-m w-full mt-3 p-b-20\">\n              <div>\n                <span>Vous avez déjà un compte? <a routerLink=\"/authentication/signin\">\n                    Se connecter\n                  </a></span>\n              </div>\n            </div>\n            <div class=\"container-auth-form-btn\">\n              <button mat-flat-button [class.auth-spinner]=\"loading\" [disabled]=\"loading\" color=\"primary\" class=\"auth-form-btn\" [disabled]=\"!authForm.valid\" type=\"submit\">\n                Suivant\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToasServiceService {\n\n  constructor(private toastr: ToastrService) { }\n\n  showSuccessMessage(message: string){\n    this.toastr.success(message);\n  }\n\n  showErrorMessage(message: string){\n    this.toastr.error(message);\n  }\n\n  showWarningMessage(message: string){\n    this.toastr.warning(message);\n  }\n}\n"],"sourceRoot":"webpack:///"}