{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/radio.js"],"names":["_c0","_c1","a0","enterDuration","_c2","MAT_CHECKBOX_DEFAULT_OPTIONS","InjectionToken","providedIn","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","color","clickAction","nextUniqueId","defaults","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","MatCheckbox","multi","MatCheckboxChange","_MatCheckboxBase","mixinTabIndex","mixinColor","mixinDisableRipple","mixinDisabled","_elementRef","elementRef","_changeDetectorRef","_focusMonitor","_ngZone","tabIndex","_animationMode","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","EventEmitter","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","defaultColor","parseInt","_required","value","coerceBooleanProperty","monitor","subscribe","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","stopMonitoring","checked","newValue","disabled","changed","_transitionCheckState","emit","disableRipple","detectChanges","fn","isDisabled","indeterminate","newState","oldState","element","nativeElement","length","classList","remove","_getAnimationClassForCheckStateTransition","add","animationClass","runOutsideAngular","setTimeout","event","source","_inputElement","_a","stopPropagation","toggle","_emitChangeEvent","origin","options","focusVia","focus","animSuffix","nativeCheckbox","ɵfac","MatCheckbox_Factory","t","ANIMATION_MODULE_TYPE","ɵcmp","type","selectors","viewQuery","MatCheckbox_Query","rf","ctx","MatRipple","_t","first","ripple","hostAttrs","hostVars","hostBindings","MatCheckbox_HostBindings","inputs","required","ariaDescribedby","outputs","exportAs","features","ngContentSelectors","decls","vars","consts","template","MatCheckbox_Template","MatCheckbox_Template_input_change_3_listener","$event","_onInteractionEvent","MatCheckbox_Template_input_click_3_listener","_onInputClick","MatCheckbox_Template_span_cdkObserveContent_12_listener","_onLabelTextChange","_r0","_r2","inputId","textContent","trim","_getAriaChecked","_isRippleDisabled","directives","styles","encapsulation","changeDetection","ctorParameters","ElementRef","ChangeDetectorRef","FocusMonitor","NgZone","String","decorators","Attribute","args","Optional","Inject","undefined","propDecorators","Input","Output","ViewChild","ngDevMode","Component","selector","host","providers","ViewEncapsulation","ChangeDetectionStrategy","MAT_CHECKBOX_REQUIRED_VALIDATOR","NG_VALIDATORS","MatCheckboxRequiredValidator","CheckboxRequiredValidator","ɵMatCheckboxRequiredValidator_BaseFactory","MatCheckboxRequiredValidator_Factory","ɵdir","Directive","_MatCheckboxRequiredValidatorModule","_MatCheckboxRequiredValidatorModule_Factory","ɵmod","ɵinj","NgModule","exports","declarations","ngJitMode","MatCheckboxModule","MatCheckboxModule_Factory","imports","MatRippleModule","MatCommonModule","ObserversModule","MAT_RADIO_DEFAULT_OPTIONS","MAT_RADIO_DEFAULT_OPTIONS_FACTORY","MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR","MatRadioGroup","MatRadioChange","MAT_RADIO_GROUP","_MatRadioGroupBase","_changeDetector","_value","_name","_selected","_isInitialized","_labelPosition","onTouched","_updateRadioButtonNames","v","_markRadiosForCheck","_updateSelectedRadioFromValue","_checkSelectedRadioButton","selected","_radios","forEach","radio","_markForCheck","isAlreadySelected","_MatRadioGroupBase_Factory","ɵMatRadioGroup_BaseFactory","MatRadioGroup_Factory","contentQueries","MatRadioGroup_ContentQueries","dirIndex","MatRadioButton","ContentChildren","descendants","MatRadioButtonBase","_MatRadioButtonMixinBase","_MatRadioButtonBase","radioGroup","_radioDispatcher","animationMode","_providerOverride","_removeUniqueSelectionListener","_noopAnimations","coerceNumberProperty","listen","newCheckedState","notify","_setDisabled","_color","_touch","groupValueChanged","_MatRadioButtonBase_Factory","_MatRadioButtonBase_Query","UniqueSelectionDispatcher","changeDetector","focusMonitor","radioDispatcher","providerOverride","MatRadioButton_Factory","MatRadioButton_HostBindings","MatRadioButton_focus_HostBindingHandler","MatRadioButton_Template","MatRadioButton_Template_input_change_5_listener","_onInputInteraction","MatRadioButton_Template_input_click_5_listener","MatRadioModule","MatRadioModule_Factory"],"mappings":"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","file":"default-node_modules_angular_material___ivy_ngcc___fesm2015_checkbox_js-node_modules_angular_-a1eaaa-es5.js","sourcesContent":["import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function (a0) { return { enterDuration: a0 }; };\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nconst _MatCheckboxBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Whether the checkbox is required. */\n    get required() { return this._required; }\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() { return this._checked; }\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() { return this._indeterminate; }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        var _a;\n        const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(MatRipple, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 21, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", \"aria-hidden\", \"true\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"span\", 5);\n        ɵngcc0.ɵɵelement(6, \"span\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"span\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"span\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"span\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked())(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction1(19, _c1, ctx._animationMode === \"NoopAnimations\" ? 0 : 150));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatCheckboxRequiredValidator_BaseFactory; return function MatCheckboxRequiredValidator_Factory(t) { return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(t || MatCheckboxRequiredValidator); }; }();\nMatCheckboxRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); };\n_MatCheckboxRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); };\nMatCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n//# sourceMappingURL=checkbox.js.map","import { InjectionToken, forwardRef, EventEmitter, Directive, ChangeDetectorRef, Output, Input, ContentChildren, ElementRef, ViewChild, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, Attribute, NgModule } from '@angular/core';\nimport { mixinDisableRipple, mixinTabIndex, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { UniqueSelectionDispatcher } from '@angular/cdk/collections';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/cdk/collections';\nimport * as ɵngcc3 from '@angular/material/core';\n\nconst _c0 = [\"input\"];\nconst _c1 = function (a0) { return { enterDuration: a0 }; };\nconst _c2 = [\"*\"];\nconst MAT_RADIO_DEFAULT_OPTIONS = new InjectionToken('mat-radio-default-options', {\n    providedIn: 'root',\n    factory: MAT_RADIO_DEFAULT_OPTIONS_FACTORY\n});\nfunction MAT_RADIO_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent'\n    };\n}\n// Increasing integer for generating unique ids for radio components.\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-radio-group to register as a ControlValueAccessor. This\n * allows it to support [(ngModel)] and ngControl.\n * @docs-private\n */\nconst MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatRadioGroup),\n    multi: true\n};\n/** Change event object emitted by MatRadio and MatRadioGroup. */\nclass MatRadioChange {\n    constructor(\n    /** The MatRadioButton that emits the change event. */\n    source, \n    /** The value of the MatRadioButton. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Injection token that can be used to inject instances of `MatRadioGroup`. It serves as\n * alternative token to the actual `MatRadioGroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_RADIO_GROUP = new InjectionToken('MatRadioGroup');\n/**\n * Base class with all of the `MatRadioGroup` functionality.\n * @docs-private\n */\nclass _MatRadioGroupBase {\n    constructor(_changeDetector) {\n        this._changeDetector = _changeDetector;\n        /** Selected value for the radio group. */\n        this._value = null;\n        /** The HTML name attribute applied to radio buttons in this group. */\n        this._name = `mat-radio-group-${nextUniqueId++}`;\n        /** The currently selected radio button. Should match value. */\n        this._selected = null;\n        /** Whether the `value` has been set to its initial value. */\n        this._isInitialized = false;\n        /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n        this._labelPosition = 'after';\n        /** Whether the radio group is disabled. */\n        this._disabled = false;\n        /** Whether the radio group is required. */\n        this._required = false;\n        /** The method to be called in order to update ngModel */\n        this._controlValueAccessorChangeFn = () => { };\n        /**\n         * onTouch function registered via registerOnTouch (ControlValueAccessor).\n         * @docs-private\n         */\n        this.onTouched = () => { };\n        /**\n         * Event emitted when the group value changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * a radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n    }\n    /** Name of the radio button group. All radio buttons inside this group will use this name. */\n    get name() { return this._name; }\n    set name(value) {\n        this._name = value;\n        this._updateRadioButtonNames();\n    }\n    /** Whether the labels should appear after or before the radio-buttons. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition;\n    }\n    set labelPosition(v) {\n        this._labelPosition = v === 'before' ? 'before' : 'after';\n        this._markRadiosForCheck();\n    }\n    /**\n     * Value for the radio-group. Should equal the value of the selected radio button if there is\n     * a corresponding radio button with a matching value. If there is not such a corresponding\n     * radio button, this value persists to be applied in case a new radio button is added with a\n     * matching value.\n     */\n    get value() { return this._value; }\n    set value(newValue) {\n        if (this._value !== newValue) {\n            // Set this before proceeding to ensure no circular loop occurs with selection.\n            this._value = newValue;\n            this._updateSelectedRadioFromValue();\n            this._checkSelectedRadioButton();\n        }\n    }\n    _checkSelectedRadioButton() {\n        if (this._selected && !this._selected.checked) {\n            this._selected.checked = true;\n        }\n    }\n    /**\n     * The currently selected radio button. If set to a new radio button, the radio group value\n     * will be updated to match the new selected button.\n     */\n    get selected() { return this._selected; }\n    set selected(selected) {\n        this._selected = selected;\n        this.value = selected ? selected.value : null;\n        this._checkSelectedRadioButton();\n    }\n    /** Whether the radio group is disabled */\n    get disabled() { return this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /** Whether the radio group is required */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this._markRadiosForCheck();\n    }\n    /**\n     * Initialize properties once content children are available.\n     * This allows us to propagate relevant attributes to associated buttons.\n     */\n    ngAfterContentInit() {\n        // Mark this component as initialized in AfterContentInit because the initial value can\n        // possibly be set by NgModel on MatRadioGroup, and it is possible that the OnInit of the\n        // NgModel occurs *after* the OnInit of the MatRadioGroup.\n        this._isInitialized = true;\n    }\n    /**\n     * Mark this group as being \"touched\" (for ngModel). Meant to be called by the contained\n     * radio buttons upon their blur.\n     */\n    _touch() {\n        if (this.onTouched) {\n            this.onTouched();\n        }\n    }\n    _updateRadioButtonNames() {\n        if (this._radios) {\n            this._radios.forEach(radio => {\n                radio.name = this.name;\n                radio._markForCheck();\n            });\n        }\n    }\n    /** Updates the `selected` radio button from the internal _value state. */\n    _updateSelectedRadioFromValue() {\n        // If the value already matches the selected radio, do nothing.\n        const isAlreadySelected = this._selected !== null && this._selected.value === this._value;\n        if (this._radios && !isAlreadySelected) {\n            this._selected = null;\n            this._radios.forEach(radio => {\n                radio.checked = this.value === radio.value;\n                if (radio.checked) {\n                    this._selected = radio;\n                }\n            });\n        }\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent() {\n        if (this._isInitialized) {\n            this.change.emit(new MatRadioChange(this._selected, this._value));\n        }\n    }\n    _markRadiosForCheck() {\n        if (this._radios) {\n            this._radios.forEach(radio => radio._markForCheck());\n        }\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    /**\n     * Registers a callback to be triggered when the model value changes.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    /**\n     * Registers a callback to be triggered when the control is touched.\n     * Implemented as part of ControlValueAccessor.\n     * @param fn Callback to be registered.\n     */\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    /**\n     * Sets the disabled state of the control. Implemented as a part of ControlValueAccessor.\n     * @param isDisabled Whether the control should be disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetector.markForCheck();\n    }\n}\n_MatRadioGroupBase.ɵfac = function _MatRadioGroupBase_Factory(t) { return new (t || _MatRadioGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatRadioGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioGroupBase, inputs: { name: \"name\", labelPosition: \"labelPosition\", value: \"value\", selected: \"selected\", disabled: \"disabled\", required: \"required\", color: \"color\" }, outputs: { change: \"change\" } });\n_MatRadioGroupBase.ctorParameters = () => [\n    { type: ChangeDetectorRef }\n];\n_MatRadioGroupBase.propDecorators = {\n    change: [{ type: Output }],\n    color: [{ type: Input }],\n    name: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    value: [{ type: Input }],\n    selected: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }]; }, { change: [{\n            type: Output\n        }], name: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }] }); })();\n/**\n * A group of radio buttons. May contain one or more `<mat-radio-button>` elements.\n */\nclass MatRadioGroup extends _MatRadioGroupBase {\n}\nMatRadioGroup.ɵfac = /*@__PURE__*/ function () { let ɵMatRadioGroup_BaseFactory; return function MatRadioGroup_Factory(t) { return (ɵMatRadioGroup_BaseFactory || (ɵMatRadioGroup_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatRadioGroup)))(t || MatRadioGroup); }; }();\nMatRadioGroup.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatRadioGroup, selectors: [[\"mat-radio-group\"]], contentQueries: function MatRadioGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatRadioButton, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._radios = _t);\n    } }, hostAttrs: [\"role\", \"radiogroup\", 1, \"mat-radio-group\"], exportAs: [\"matRadioGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n            { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatRadioGroup.propDecorators = {\n    _radios: [{ type: ContentChildren, args: [forwardRef(() => MatRadioButton), { descendants: true },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioGroup, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-radio-group',\n                exportAs: 'matRadioGroup',\n                providers: [\n                    MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR,\n                    { provide: MAT_RADIO_GROUP, useExisting: MatRadioGroup },\n                ],\n                host: {\n                    'role': 'radiogroup',\n                    'class': 'mat-radio-group'\n                }\n            }]\n    }], null, { _radios: [{\n            type: ContentChildren,\n            args: [forwardRef(() => MatRadioButton), { descendants: true }]\n        }] }); })();\n// Boilerplate for applying mixins to MatRadioButton.\n/** @docs-private */\nclass MatRadioButtonBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatRadioButtonMixinBase = mixinDisableRipple(mixinTabIndex(MatRadioButtonBase));\n/**\n * Base class with all of the `MatRadioButton` functionality.\n * @docs-private\n */\nclass _MatRadioButtonBase extends _MatRadioButtonMixinBase {\n    constructor(radioGroup, elementRef, _changeDetector, _focusMonitor, _radioDispatcher, animationMode, _providerOverride, tabIndex) {\n        super(elementRef);\n        this._changeDetector = _changeDetector;\n        this._focusMonitor = _focusMonitor;\n        this._radioDispatcher = _radioDispatcher;\n        this._providerOverride = _providerOverride;\n        this._uniqueId = `mat-radio-${++nextUniqueId}`;\n        /** The unique ID for the radio button. */\n        this.id = this._uniqueId;\n        /**\n         * Event emitted when the checked state of this radio button changes.\n         * Change events are only emitted when the value changes due to user interaction with\n         * the radio button (the same behavior as `<input type-\"radio\">`).\n         */\n        this.change = new EventEmitter();\n        /** Whether this radio is checked. */\n        this._checked = false;\n        /** Value assigned to this radio. */\n        this._value = null;\n        /** Unregister function for _radioDispatcher */\n        this._removeUniqueSelectionListener = () => { };\n        // Assertions. Ideally these should be stripped out by the compiler.\n        // TODO(jelbourn): Assert that there's no name binding AND a parent radio group.\n        this.radioGroup = radioGroup;\n        this._noopAnimations = animationMode === 'NoopAnimations';\n        if (tabIndex) {\n            this.tabIndex = coerceNumberProperty(tabIndex, 0);\n        }\n        this._removeUniqueSelectionListener =\n            _radioDispatcher.listen((id, name) => {\n                if (id !== this.id && name === this.name) {\n                    this.checked = false;\n                }\n            });\n    }\n    /** Whether this radio button is checked. */\n    get checked() { return this._checked; }\n    set checked(value) {\n        const newCheckedState = coerceBooleanProperty(value);\n        if (this._checked !== newCheckedState) {\n            this._checked = newCheckedState;\n            if (newCheckedState && this.radioGroup && this.radioGroup.value !== this.value) {\n                this.radioGroup.selected = this;\n            }\n            else if (!newCheckedState && this.radioGroup && this.radioGroup.value === this.value) {\n                // When unchecking the selected radio button, update the selected radio\n                // property on the group.\n                this.radioGroup.selected = null;\n            }\n            if (newCheckedState) {\n                // Notify all radio buttons with the same name to un-check.\n                this._radioDispatcher.notify(this.id, this.name);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /** The value of this radio button. */\n    get value() { return this._value; }\n    set value(value) {\n        if (this._value !== value) {\n            this._value = value;\n            if (this.radioGroup !== null) {\n                if (!this.checked) {\n                    // Update checked when the value changed to match the radio group's value\n                    this.checked = this.radioGroup.value === value;\n                }\n                if (this.checked) {\n                    this.radioGroup.selected = this;\n                }\n            }\n        }\n    }\n    /** Whether the label should appear after or before the radio button. Defaults to 'after' */\n    get labelPosition() {\n        return this._labelPosition || (this.radioGroup && this.radioGroup.labelPosition) || 'after';\n    }\n    set labelPosition(value) {\n        this._labelPosition = value;\n    }\n    /** Whether the radio button is disabled. */\n    get disabled() {\n        return this._disabled || (this.radioGroup !== null && this.radioGroup.disabled);\n    }\n    set disabled(value) {\n        this._setDisabled(coerceBooleanProperty(value));\n    }\n    /** Whether the radio button is required. */\n    get required() {\n        return this._required || (this.radioGroup && this.radioGroup.required);\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Theme color of the radio button. */\n    get color() {\n        // As per Material design specifications the selection control radio should use the accent color\n        // palette by default. https://material.io/guidelines/components/selection-controls.html\n        return this._color ||\n            (this.radioGroup && this.radioGroup.color) ||\n            this._providerOverride && this._providerOverride.color || 'accent';\n    }\n    set color(newValue) { this._color = newValue; }\n    /** ID of the native input element inside `<mat-radio-button>` */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /** Focuses the radio button. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Marks the radio button as needing checking for change detection.\n     * This method is exposed because the parent radio group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When group value changes, the button will not be notified. Use `markForCheck` to explicit\n        // update radio button's status\n        this._changeDetector.markForCheck();\n    }\n    ngOnInit() {\n        if (this.radioGroup) {\n            // If the radio is inside a radio group, determine if it should be checked\n            this.checked = this.radioGroup.value === this._value;\n            if (this.checked) {\n                this.radioGroup.selected = this;\n            }\n            // Copy name from parent radio group\n            this.name = this.radioGroup.name;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor\n            .monitor(this._elementRef, true)\n            .subscribe(focusOrigin => {\n            if (!focusOrigin && this.radioGroup) {\n                this.radioGroup._touch();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._removeUniqueSelectionListener();\n    }\n    /** Dispatch change event with current value. */\n    _emitChangeEvent() {\n        this.change.emit(new MatRadioChange(this, this._value));\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `radio-button` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Triggered when the radio button receives an interaction from the user. */\n    _onInputInteraction(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n        if (!this.checked && !this.disabled) {\n            const groupValueChanged = this.radioGroup && this.value !== this.radioGroup.value;\n            this.checked = true;\n            this._emitChangeEvent();\n            if (this.radioGroup) {\n                this.radioGroup._controlValueAccessorChangeFn(this.value);\n                if (groupValueChanged) {\n                    this.radioGroup._emitChangeEvent();\n                }\n            }\n        }\n    }\n    /** Sets the disabled state and marks for check if a change occurred. */\n    _setDisabled(value) {\n        if (this._disabled !== value) {\n            this._disabled = value;\n            this._changeDetector.markForCheck();\n        }\n    }\n}\n_MatRadioButtonBase.ɵfac = function _MatRadioButtonBase_Factory(t) { return new (t || _MatRadioButtonBase)(ɵngcc0.ɵɵdirectiveInject(_MatRadioGroupBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(String), ɵngcc0.ɵɵdirectiveInject(undefined), ɵngcc0.ɵɵdirectiveInject(String)); };\n_MatRadioButtonBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatRadioButtonBase, viewQuery: function _MatRadioButtonBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n    } }, inputs: { id: \"id\", checked: \"checked\", value: \"value\", labelPosition: \"labelPosition\", disabled: \"disabled\", required: \"required\", color: \"color\", name: \"name\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { change: \"change\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n_MatRadioButtonBase.ctorParameters = () => [\n    { type: _MatRadioGroupBase },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String },\n    { type: undefined },\n    { type: String }\n];\n_MatRadioButtonBase.propDecorators = {\n    id: [{ type: Input }],\n    name: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    checked: [{ type: Input }],\n    value: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    disabled: [{ type: Input }],\n    required: [{ type: Input }],\n    color: [{ type: Input }],\n    change: [{ type: Output }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatRadioButtonBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatRadioGroupBase }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String }, { type: undefined }, { type: String }]; }, { id: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], checked: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], color: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }] }); })();\n/**\n * A Material design radio-button. Typically placed inside of `<mat-radio-group>` elements.\n */\nclass MatRadioButton extends _MatRadioButtonBase {\n    constructor(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex) {\n        super(radioGroup, elementRef, changeDetector, focusMonitor, radioDispatcher, animationMode, providerOverride, tabIndex);\n    }\n}\nMatRadioButton.ɵfac = function MatRadioButton_Factory(t) { return new (t || MatRadioButton)(ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_GROUP, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.UniqueSelectionDispatcher), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_RADIO_DEFAULT_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatRadioButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatRadioButton, selectors: [[\"mat-radio-button\"]], hostAttrs: [1, \"mat-radio-button\"], hostVars: 17, hostBindings: function MatRadioButton_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatRadioButton_focus_HostBindingHandler() { return ctx._inputElement.nativeElement.focus(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", null)(\"id\", ctx.id)(\"aria-label\", null)(\"aria-labelledby\", null)(\"aria-describedby\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-checked\", ctx.checked)(\"mat-radio-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._noopAnimations)(\"mat-primary\", ctx.color === \"primary\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matRadioButton\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 13, vars: 20, consts: [[1, \"mat-radio-label\"], [\"label\", \"\"], [1, \"mat-radio-container\"], [1, \"mat-radio-outer-circle\"], [1, \"mat-radio-inner-circle\"], [\"type\", \"radio\", 1, \"mat-radio-input\", \"cdk-visually-hidden\", 3, \"id\", \"checked\", \"disabled\", \"tabIndex\", \"required\", \"change\", \"click\"], [\"input\", \"\"], [\"mat-ripple\", \"\", 1, \"mat-radio-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-radio-persistent-ripple\"], [1, \"mat-radio-label-content\"], [2, \"display\", \"none\"]], template: function MatRadioButton_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"span\", 2);\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelement(4, \"span\", 4);\n        ɵngcc0.ɵɵelementStart(5, \"input\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"change\", function MatRadioButton_Template_input_change_5_listener($event) { return ctx._onInputInteraction($event); })(\"click\", function MatRadioButton_Template_input_click_5_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"span\", 7);\n        ɵngcc0.ɵɵelement(8, \"span\", 8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"span\", 9);\n        ɵngcc0.ɵɵelementStart(10, \"span\", 10);\n        ɵngcc0.ɵɵtext(11, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(12);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex)(\"required\", ctx.required);\n        ɵngcc0.ɵɵattribute(\"name\", ctx.name)(\"value\", ctx.value)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleCentered\", true)(\"matRippleRadius\", 20)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction1(18, _c1, ctx._noopAnimations ? 0 : 150));\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-radio-label-before\", ctx.labelPosition == \"before\");\n    } }, directives: [ɵngcc3.MatRipple], styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatRadioButton.ctorParameters = () => [\n    { type: MatRadioGroup, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_GROUP,] }] },\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: UniqueSelectionDispatcher },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RADIO_DEFAULT_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioButton, [{\n        type: Component,\n        args: [{\n                selector: 'mat-radio-button',\n                template: \"<!-- TODO(jelbourn): render the radio on either side of the content -->\\n<!-- TODO(mtlin): Evaluate trade-offs of using native radio vs. cost of additional bindings. -->\\n<label [attr.for]=\\\"inputId\\\" class=\\\"mat-radio-label\\\" #label>\\n  <!-- The actual 'radio' part of the control. -->\\n  <span class=\\\"mat-radio-container\\\">\\n    <span class=\\\"mat-radio-outer-circle\\\"></span>\\n    <span class=\\\"mat-radio-inner-circle\\\"></span>\\n    <input #input class=\\\"mat-radio-input cdk-visually-hidden\\\" type=\\\"radio\\\"\\n        [id]=\\\"inputId\\\"\\n        [checked]=\\\"checked\\\"\\n        [disabled]=\\\"disabled\\\"\\n        [tabIndex]=\\\"tabIndex\\\"\\n        [attr.name]=\\\"name\\\"\\n        [attr.value]=\\\"value\\\"\\n        [required]=\\\"required\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n        (change)=\\\"_onInputInteraction($event)\\\"\\n        (click)=\\\"_onInputClick($event)\\\">\\n\\n    <!-- The ripple comes after the input so that we can target it with a CSS\\n         sibling selector when the input is focused. -->\\n    <span mat-ripple class=\\\"mat-radio-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n      <span class=\\\"mat-ripple-element mat-radio-persistent-ripple\\\"></span>\\n    </span>\\n  </span>\\n\\n  <!-- The label content for radio control. -->\\n  <span class=\\\"mat-radio-label-content\\\" [class.mat-radio-label-before]=\\\"labelPosition == 'before'\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                inputs: ['disableRipple', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matRadioButton',\n                host: {\n                    'class': 'mat-radio-button',\n                    '[class.mat-radio-checked]': 'checked',\n                    '[class.mat-radio-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_noopAnimations',\n                    '[class.mat-primary]': 'color === \"primary\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"',\n                    // Needs to be removed since it causes some a11y issues (see #21266).\n                    '[attr.tabindex]': 'null',\n                    '[attr.id]': 'id',\n                    '[attr.aria-label]': 'null',\n                    '[attr.aria-labelledby]': 'null',\n                    '[attr.aria-describedby]': 'null',\n                    // Note: under normal conditions focus shouldn't land on this element, however it may be\n                    // programmatically set, for example inside of a focus trap, in this case we want to forward\n                    // the focus to the native element.\n                    '(focus)': '_inputElement.nativeElement.focus()'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-radio-button{display:inline-block;-webkit-tap-highlight-color:transparent;outline:0}.mat-radio-label{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;display:inline-flex;align-items:center;white-space:nowrap;vertical-align:middle;width:100%}.mat-radio-container{box-sizing:border-box;display:inline-block;position:relative;width:20px;height:20px;flex-shrink:0}.mat-radio-outer-circle{box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;transition:border-color ease 280ms;width:20px;border-width:2px;border-style:solid;border-radius:50%}._mat-animation-noopable .mat-radio-outer-circle{transition:none}.mat-radio-inner-circle{border-radius:50%;box-sizing:border-box;display:block;height:20px;left:0;position:absolute;top:0;opacity:0;transition:transform ease 280ms,background-color ease 280ms,opacity linear 1ms 280ms;width:20px;transform:scale(0.001);-webkit-print-color-adjust:exact;color-adjust:exact}.mat-radio-checked .mat-radio-inner-circle{transform:scale(0.5);opacity:1;transition:transform ease 280ms,background-color ease 280ms}.cdk-high-contrast-active .mat-radio-checked .mat-radio-inner-circle{border:solid 10px}._mat-animation-noopable .mat-radio-inner-circle{transition:none}.mat-radio-label-content{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto;display:inline-block;order:0;line-height:inherit;padding-left:8px;padding-right:0}[dir=rtl] .mat-radio-label-content{padding-right:8px;padding-left:0}.mat-radio-label-content.mat-radio-label-before{order:-1;padding-left:0;padding-right:8px}[dir=rtl] .mat-radio-label-content.mat-radio-label-before{padding-right:0;padding-left:8px}.mat-radio-disabled,.mat-radio-disabled .mat-radio-label{cursor:default}.mat-radio-button .mat-radio-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-radio-button .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple){opacity:.16}.mat-radio-persistent-ripple{width:100%;height:100%;transform:none;top:0;left:0}.mat-radio-container:hover .mat-radio-persistent-ripple{opacity:.04}.mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-persistent-ripple,.mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-persistent-ripple{opacity:.12}.mat-radio-persistent-ripple,.mat-radio-disabled .mat-radio-container:hover .mat-radio-persistent-ripple{opacity:0}@media(hover: none){.mat-radio-container:hover .mat-radio-persistent-ripple{display:none}}.mat-radio-input{bottom:0;left:50%}.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-keyboard-focused .mat-radio-ripple,.cdk-high-contrast-active .mat-radio-button:not(.mat-radio-disabled).cdk-program-focused .mat-radio-ripple{outline:solid 3px}.cdk-high-contrast-active .mat-radio-disabled{opacity:.5}\\n\"]\n            }]\n    }], function () { return [{ type: MatRadioGroup, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_GROUP]\n            }] }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc2.UniqueSelectionDispatcher }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RADIO_DEFAULT_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRadioModule {\n}\nMatRadioModule.ɵfac = function MatRadioModule_Factory(t) { return new (t || MatRadioModule)(); };\nMatRadioModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatRadioModule });\nMatRadioModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatRadioModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatRippleModule, MatCommonModule],\n                exports: [MatRadioGroup, MatRadioButton, MatCommonModule],\n                declarations: [MatRadioGroup, MatRadioButton]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatRadioModule, { declarations: function () { return [MatRadioGroup, MatRadioButton]; }, imports: function () { return [MatRippleModule, MatCommonModule]; }, exports: function () { return [MatRadioGroup, MatRadioButton, MatCommonModule]; } }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_RADIO_DEFAULT_OPTIONS, MAT_RADIO_DEFAULT_OPTIONS_FACTORY, MAT_RADIO_GROUP, MAT_RADIO_GROUP_CONTROL_VALUE_ACCESSOR, MatRadioButton, MatRadioChange, MatRadioGroup, MatRadioModule, _MatRadioButtonBase, _MatRadioGroupBase };\n\n//# sourceMappingURL=radio.js.map"]}